name: Build QMK

on:
  push:
    paths:
      - "qmk_config/**"
  pull_request:
    paths:
      - "qmk_config/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - source: cornelius
            target: foostan/cornelius
            keyboard: foostan/cornelius
            keymap: alterecco
          - source: ferris
            target: ferris
            keyboard: ferris/0_2
            keymap: alterecco

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          persist-credentials: false
          submodules: true

      - name: Prepare Build
        run: |
          ln -s ${GITHUB_WORKSPACE}/qmk_config/user ${GITHUB_WORKSPACE}/qmk_firmware/users/alterecco
          # link keymaps from matrix to the correct directory
          ln -s ${GITHUB_WORKSPACE}/qmk_config/${{ matrix.source }} ${GITHUB_WORKSPACE}/qmk_firmware/keyboards/${{ matrix.target }}/keymaps/${{ matrix.keymap }}

      - name: Build
        id: build
        run: |
          cd ${GITHUB_WORKSPACE}/qmk_firmware

          TARGET="${{ matrix.keyboard }}"
          if [ -n "${{ matrix.keymap }}" ]; then
            TARGET="${TARGET}:${{ matrix.keymap }}"
          fi
          sed -i 's/run --rm -it/run --rm/' util/docker_build.sh
          util/docker_build.sh ${TARGET}

          echo ::set-output name=artifact-name::${TARGET//[:<>|*?\\\/]/_}
          echo "Artifact-name: ${{ steps.build.outputs.artifact-name }}"

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: "${{ steps.build.outputs.artifact-name }}"
          path: |
            qmk_firmware/*.hex
            qmk_firmware/*.bin
        continue-on-error: true




    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v2
    #   - name: Cache west modules
    #     uses: actions/cache@v2
    #     env:
    #       cache-name: cache-zephyr-modules
    #     with:
    #       path: |
    #         bootloader/
    #         modules/
    #         tools/
    #         zephyr/
    #         zmk/
    #       key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('zmk_config/west.yml') }}
    #       restore-keys: |
    #         ${{ runner.os }}-build-${{ env.cache-name }}-
    #         ${{ runner.os }}-build-
    #         ${{ runner.os }}-
    #     timeout-minutes: 2
    #     continue-on-error: true
    #   - name: Initialize workspace (west init)
    #     run: west init -l zmk_config
    #   - name: Update modules (west update)
    #     run: west update
    #   - name: Export Zephyr CMake package (west zephyr-export)
    #     run: west zephyr-export
    #   - name: Prepare variables
    #     id: variables
    #     run: |
    #       if [ -n "${{ matrix.shield }}" ]; then
    #         SHIELD_ARG="-DSHIELD=${{ matrix.shield }}"
    #         ARTIFACT_NAME="${{ matrix.shield }}-${{ matrix.board }}-zmk"
    #       else
    #         SHIELD_ARG=
    #         ARTIFACT_NAME="${{ matrix.board }}-zmk"
    #       fi

    #       if [ -n "${{ matrix.folder }}" ]; then
    #         FOLDER_ARG="zmk_config/${{ matrix.folder }}"
    #       else
    #         FOLDER_ARG="zmk_config"
    #       fi

    #       echo ::set-output name=shield-arg::${SHIELD_ARG}
    #       echo ::set-output name=artifact-name::${ARTIFACT_NAME}
    #       echo ::set-output name=folder-arg::${FOLDER_ARG}
    #   - name: Build (west build)
    #     run: west build -s zmk/app -b ${{ matrix.board }} -- ${{ steps.variables.outputs.shield-arg }}
    #       -DZMK_CONFIG="${GITHUB_WORKSPACE}/${{ steps.variables.outputs.folder-arg }}"
    #   - name: Generated DTS file
    #     if: always()
    #     run: cat -n build/zephyr/${{ matrix.board }}.dts.pre.tmp
    #   - name: Archive artifacts
    #     uses: actions/upload-artifact@v2
    #     with:
    #       name: ${{ steps.variables.outputs.artifact-name }}
    #       path: |
    #         build/zephyr/zmk.hex
    #         build/zephyr/zmk.uf2
    #     continue-on-error: true
